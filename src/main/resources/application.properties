
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://team-2-p2.cvtq9j4axrge.us-east-1.rds.amazonaws.com:5432/postgres
spring.datasource.password=postgres
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true
spring.jpa.hibernate.ddl-auto=create

# JPA Settings

#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:postgresql://team-2-p2.cvtq9j4axrge.us-east-1.rds.amazonaws.com:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driverClassName=org.postgres.jdbc.Driver

# Configure Port and Context Path
server.port=5000
server.servlet.context-path=/api


# In the master application.properties file we can control which Spring Profile we want to use
spring.profiles.active=dev

##########################
# will find by id without error (JK it was because we were using getById instead of findById)
#spring.jackson.serialization.fail-on-empty-beans=false